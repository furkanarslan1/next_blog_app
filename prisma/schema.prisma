generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  firstName      String
  lastName       String
  username       String     @unique
  email          String     @unique
  password       String
  avatarUrl      String?

  role String @default("user") 

  createdAt      DateTime   @default(now())

  likedPosts     Post[]     @relation("PostLikes")
  likedComments  Comment[]  @relation("CommentLikes")
  comments       Comment[]
  questions BlogQuestion[]

}

model Post {
  id              Int        @id @default(autoincrement())
  title           String
  content         String
  imageUrl        String?
  description     String?
  slug            String     @unique
  likeCount       Int        @default(0)
  tags            String?
  keywords        String?
  metaDescription String?

  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  category        Category?  @relation("PostCategory", fields: [categoryId], references: [id])
  categoryId      Int?

  homeSlider      HomeSlider[] @relation("PostHomeSlider")
  comments        Comment[]    @relation("PostComments")
  likedByUsers    User[]       @relation("PostLikes")
  questions BlogQuestion[]

}

model Comment {
  id             Int       @id @default(autoincrement())
  content        String
  createdAt      DateTime  @default(now())

  post           Post      @relation("PostComments", fields: [postId], references: [id])
  postId         Int

  user           User      @relation(fields: [userId], references: [id])
  userId         Int

  likedByUsers   User[]    @relation("CommentLikes")
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  slug  String  @unique
  posts Post[]  @relation("PostCategory")
}



model HomeSlider {
  id       Int      @id @default(autoincrement())
  order    Int      @unique
  post     Post     @relation("PostHomeSlider", fields: [postId], references: [id], onDelete: Cascade)
  postId   Int
  addedAt  DateTime @default(now())
}


model BlogQuestion {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  question  String
  createdAt DateTime @default(now())
}
